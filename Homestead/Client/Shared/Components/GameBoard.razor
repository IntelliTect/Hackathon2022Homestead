@using Homestead.Client.ViewModels
@using Homestead.Shared
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject HubConnection hubConnection
@inject ILobbyVm Lobby
@implements IDisposable

<div class="map">
    <div class=row gx-1 mb-1>
        @if(CurrentPlayerId == 1)
        {
        <button type="button">Start</button>
        }
    </div>
    <div class="row gx-1 mb-1">
        @foreach (var opponent in Opponents)
        {
            <div class="col">
                <PlayerHomestead Player="@opponent.Player" />
            </div>
        }
    </div>

    <div class="col">
        <PlayerHomestead Player="CurrentPlayer.Player" />
    </div>
</div>

<PlayerHand HandList="@CurrentPlayer.Hand" />


@code {
    //[CascadingParameter]
    public int CurrentPlayerId { get; set; } = 1; // TODO: Fix this

    private BoardVm GameState => Lobby.Board!;

    public List<PlayerVm> Opponents { get => GameState.OtherPlayers; }
    public PlayerVm CurrentPlayer { get =>GameState.LocalPlayer; }

    protected override async Task OnInitializedAsync()
    {
        hubConnection.On<Game>("ActionReceived", (state) =>
        {
            GameState.Update(state);
            StateHasChanged();
        });

        await base.OnInitializedAsync();
    }   
        public void Dispose()
    {
        hubConnection.Remove("ActionReceived");
    }
}
