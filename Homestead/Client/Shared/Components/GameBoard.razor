@using Homestead.Client.ViewModels
@using Homestead.Shared
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager Navigation
@inject HubConnection hubConnection
@inject LobbyVm Lobby
@implements IDisposable
@inject HttpClient Http

<div class="map">
    <div class="row gx-1 mb-1">
        @foreach (var opponent in Opponents)
        {
            <div class="col">
                <PlayerHomestead Player="@opponent" />
            </div>
        }
    </div>

    <div class="col">
        <PlayerHomestead Player="CurrentPlayer" />
    </div>

    <div class=row gx-1 mb-1>
        @if (IsOwnerOfGame && Board.State == Game.GameState.Joining)
        {
            <button type="button" class="btn btn-success" @onclick="StartGame">Start</button>
        }
    </div>

</div>

<PlayerHand HandList="@CurrentPlayer.Hand" />


@code {
    //[CascadingParameter]
    public bool IsOwnerOfGame => CurrentPlayer.PlayerNumber == 1;

    private BoardVm Board => Lobby.Board;

    public List<PlayerVm> Opponents { get => Board.OtherPlayers; }
    public PlayerVm CurrentPlayer { get => Board.LocalPlayer; }

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"Game Board Component with {Opponents.Count() + 1} Players");
        hubConnection.On<Game>("ActionReceived", (state) =>
        {
            Board.Update(state);
            StateHasChanged();
        });
        Board.PerformAction += SendAction!;

        await base.OnInitializedAsync();
    }

    public async void SendAction(object sender, BoardVm.ActionEventArgs args)
    {
       await hubConnection.InvokeAsync("ExecuteAction", Board.GameId, args.Action);
    }

    public async Task StartGame()
    {
        Console.WriteLine("Starting the game");
        var result = await Http.PostAsync($"start/{Board.GameId}", null);
        var game = await result.Content.ReadFromJsonAsync<Game>();
        if (game == null) throw new ArgumentException("Game could not start");
        // TODO: Do something with this failure case

        Board.Update(game);
        Console.WriteLine("Game Started");
    }


    public void Dispose()
    {
        hubConnection.Remove("ActionReceived");
    }
}
