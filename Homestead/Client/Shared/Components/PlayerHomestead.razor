@using Homestead.Client.ViewModels
@inject LobbyVm Lobby

<div class="homestead-outline  @(Player.IsCurrentPlayer ? "selected" : "")">
    <!-- Visuals -->
    <div class="homestead">
        <div class="player-name">
            <div>
                @if (Player.IsCurrentPlayer)
                {
                    if (Lobby.Board.WinningPlayer == Player)
                    {
                        <span>🏆</span>
                    }
                    else
                    {
                        <span>🚩</span>
                    }
                }
            </div>
            <span>@Player.PlayerNumber: @Player.Player.Name</span>
            @if (Player.IsLocalPlayer)
            {
                <span> (You)</span>
            }
            @if (Player.IsBot)
            {
                <span> 🤖</span>
            }
        </div>
        <div class="house-area">
            <!-- House -->
            <img class="home" src="/Assets/Images/house/house@(Player.BoardHouse.Count()).png" />
            <!-- Player -->
            <img class="player @(Lobby.Board.CanSelectPlayer ? "selected":"")" src="@Player.GetImageUrl()" @onclick="SelectPlayer"/>
            <!-- Garden -->
            <img class="garden" src="/Assets/Images/garden/garden@(Player.BoardGarden.Count()).png" />
        </div>
    </div>
    <!-- Card Slots -->
    <div class="row board-cards">
        <!-- House Cards -->
        <div class="board-card-area col-12 col-sm-6 col-md-12 col-lg-6 mx-0">
            @foreach (var card in Player.BoardHouse)
            {
                <div class="board-card">
                    <PlayerCard Card="@card" />
                </div>
            }
            @for (int i = Player.BoardHouse.Count(); i < 4; i++)
            {
                <div class="board-card">
                    <BlankCard />
                </div>

            }

        </div>
        <!-- Farm Cards -->
        <div class="board-card-area col-12 col-sm-6 col-md-12 col-lg-6 mx-0">
            @foreach (var card in Player.BoardGarden)
            {
                <div class="board-card">
                    <PlayerCard Card="@card" />
                </div>
            }
            @for (int i = Player.BoardGarden.Count(); i < 3; i++)
            {
                <div class="board-card">
                    <BlankCard />
                </div>

            }
            <!-- Livestock Cards -->
            @foreach (var card in Player.BoardLivestock)
            {
                <div class="board-card">
                    <PlayerCard Card="@card" />
                </div>
            }
            @for (int i = Player.BoardLivestock.Count(); i < 1; i++)
            {
                <div class="board-card">
                    <BlankCard />
                </div>

            }
        </div>
    </div>
</div>

@code {
    [Parameter]
    public PlayerVm Player { get; set; } = null!;

    //public List<CardInfo> BoardLivestock { get => Player.BoardBySuit(CardInfo.CardSuit.LiveStock).Select(card => Cards.GetCardInfo(card)).ToList(); }
    //public List<CardInfo> BoardGarden { get => Player.BoardBySuit(CardInfo.CardSuit.Garden).Select(card => Cards.GetCardInfo(card)).ToList(); }
    //public List<CardInfo> BoardHouse { get => Player.BoardBySuit(CardInfo.CardSuit.House).Select(card => Cards.GetCardInfo(card)).ToList(); }

    protected override void OnInitialized()
    {
        Console.WriteLine($"Player {Player.PlayerNumber}");
    }

    protected void SelectPlayer()
    {
        Lobby.Board.SelectPlayer(Player.PlayerNumber);
    }


}
