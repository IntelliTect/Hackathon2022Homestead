@page "/"
@using System.Net.Http
@using Homestead.Client.ViewModels
@using Homestead.Shared;
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject LobbyVm Lobby;
@inject HubConnection hubConnection

<PageTitle>Index</PageTitle>

<h1>Homestead</h1>
<hr />
<h3>
    Games
</h3>
<div>
    <button class="btn btn-success" @onclick="CreateGame" type="button">New Game</button>
</div>
<hr />

<div>
    @if (games is null || !games.Any())
    {
        <p>No games found.</p>
    }
    else
    {
        <table> 
          <tr>
            <th style="padding-right:20px">Game Number</th>
            <th style="padding-right:20px">Active Players</th>
            <th style="padding-right:20px">Actions</th>
          </tr>
          @foreach (var item in games)
           {
                <tr>
                    <td style="padding-right:20px">@(Array.IndexOf(games, item) + 1)</td>
                    <td style="padding-right:20px">@GetHumanPlayerCount(item)</td>
                    <td style="padding-right:20px">
                        <button class="btn btn-success" disabled="@(GetHumanPlayerCount(item) > 3)" type="button" @onclick="()=>JoinGame(item.GameId)">Join</button>
                    </td>
                </tr>
            }
         </table>
    }
</div>

@code {
    private Game[]? games;

    private int GetHumanPlayerCount(Game game) => game.Players.Where(x => !x.IsBot).Count();

    protected override async Task OnInitializedAsync()
    {
        games = await Http.GetFromJsonAsync<Game[]>("Lobby");
        Console.WriteLine(games!.Count());
    }

    private async Task CreateGame()
    {
        await Lobby.CreateGame(Http);
        await hubConnection.InvokeAsync("SubscribeToGame", Lobby.Board.GameId);
        NavManager.NavigateTo("/gameboardpage");
    }

    private void DisplayInstructions()
    {
        NavManager.NavigateTo("/instructions");
    }

    private async Task JoinGame(string gameId)
    {
        var result = await Lobby.JoinGame(gameId, Http);
        await hubConnection.InvokeAsync("SubscribeToGame", Lobby.Board.GameId);
        if (result) NavManager.NavigateTo("/gameboardpage");

    }
}