@page "/"
@using System.Net.Http
@using Homestead.Client.ViewModels
@using Homestead.Shared;
@using Microsoft.AspNetCore.SignalR.Client
@inject HttpClient Http
@inject NavigationManager NavManager
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject LobbyVm Lobby;
@inject HubConnection hubConnection

<PageTitle>Index</PageTitle>

<h1>Homestead</h1>
<hr />
<h3>
    Games
</h3>
<div>
    <button class="btn btn-success" @onclick="DisplayInstructions" type="button">Instructions</button>
    <button class="btn btn-success" @onclick="CreateGame" type="button">New Game</button>
</div>
<hr />

<div>
    @if (games is null || !games.Any())
    {
        <p>No games found.</p>
    }
    else
    {
        <ul>
            @foreach (var item in games)
            {
                <li>@item.GameId</li>
                <li><button class="btn btn-success" type="button" @onclick="()=>JoinGame(item.GameId)">Join</button></li>
            }
        </ul>
    }
</div>

@code {
    private Game[]? games;

    protected override async Task OnInitializedAsync()
    {
        games = await Http.GetFromJsonAsync<Game[]>("Lobby");
        Console.WriteLine(games!.Count());
    }

    private async Task CreateGame()
    {
        await Lobby.CreateGame(Http);
        await hubConnection.InvokeAsync("SubscribeToGame", Lobby.Board.GameId);
        NavManager.NavigateTo("/gameboardpage");
    }

    private void DisplayInstructions()
    {
        NavManager.NavigateTo("/instructions");
    }

    private async Task JoinGame(string gameId)
    {
        var result = await Lobby.JoinGame(gameId, Http);
        await hubConnection.InvokeAsync("SubscribeToGame", Lobby.Board.GameId);
        if (result) NavManager.NavigateTo("/gameboardpage");

    }
}